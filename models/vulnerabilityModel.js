const db = require("../config/db");

module.exports = {
  async create(name, description, severity, cvss, cve, status) {
    const result = await db.query(
      "INSERT INTO vulnerabilities (name, description, severity, cvss, cve, status) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *",
      [name, description, severity, cvss, cve, status]
    );
    return result.rows[0];
  },

  async getAll(page, limit) {
    const offset = (page - 1) * limit;

    const totalResult = await db.query(
      "SELECT COUNT(*) AS total FROM vulnerabilities"
    );
    const totalItems = parseInt(totalResult.rows[0].total, 10);

    const result = await db.query(
      "SELECT * FROM vulnerabilities LIMIT $1 OFFSET $2",
      [limit, offset]
    );

    return {
      vulnerabilities: result.rows,
      pagination: {
        totalItems,
        currentPage: page,
        pageSize: limit,
        totalPages: Math.ceil(totalItems / limit),
      },
    };
  },

  async getById(id) {
    const result = await db.query(
      "SELECT * FROM vulnerabilities WHERE id = $1",
      [id]
    );
    return result.rows[0];
  },

  async update(id, updatedData) {
    const result = await db.query(
      "UPDATE vulnerabilities SET name = $1, description = $2, severity = $3, cvss = $4, cve = $5, status = $6 WHERE id = $7 RETURNING *",
      [
        updatedData.name,
        updatedData.description,
        updatedData.severity,
        updatedData.cvss,
        updatedData.cve,
        updatedData.status,
        id,
      ]
    );
    return result.rows[0];
  },

  async delete(id) {
    const result = await db.query(
      "DELETE FROM vulnerabilities WHERE id = $1 RETURNING *",
      [id]
    );
    return result.rows[0];
  },
};
