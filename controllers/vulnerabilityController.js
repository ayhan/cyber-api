const vulnerabilityModel = require("../models/vulnerabilityModel");

module.exports = {
  async createVulnerability(req, res) {
    const { name, description, severity, cvss, cve, status } = req.body;
    try {
      const newVulnerability = await vulnerabilityModel.create(
        name,
        description,
        severity,
        cvss,
        cve,
        status
      );
      res.status(201).json(newVulnerability);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  },

  async getAllVulnerabilities(req, res) {
    try {
      const vulnerabilities = await vulnerabilityModel.getAll();
      res.status(200).json(vulnerabilities);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  },

  async getVulnerabilityById(req, res) {
    const { id } = req.params;
    try {
      const vulnerability = await vulnerabilityModel.getById(id);
      if (!vulnerability) {
        return res.status(404).json({ message: "Vulnerability not found" });
      }
      res.status(200).json(vulnerability);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  },

  async updateVulnerability(req, res) {
    const { id } = req.params;
    const updatedData = req.body;
    try {
      const updatedVulnerability = await vulnerabilityModel.update(
        id,
        updatedData
      );
      if (!updatedVulnerability) {
        return res.status(404).json({ message: "Vulnerability not found" });
      }
      res.status(200).json(updatedVulnerability);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  },

  async deleteVulnerability(req, res) {
    const { id } = req.params;
    try {
      const deletedVulnerability = await vulnerabilityModel.delete(id);
      if (!deletedVulnerability) {
        return res.status(404).json({ message: "Vulnerability not found" });
      }
      res.status(204).send();
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  },
};
